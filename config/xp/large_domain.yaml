# @package _global_

paths:
  obs: /DATASET/NATL/cal_data_new_errs.nc
  gt: /DATASET/NATL/NATL60-CJM165_NATL_ssh_y2013.1y.nc

trainer:
  _target_: pytorch_lightning.Trainer
  inference_mode: false
  gradient_clip_val: 0.5
  accelerator: gpu
  devices: 1
  logger:
    _target_: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    save_dir: ${hydra:runtime.output_dir}
    name: ${hydra:runtime.choices.xp}
    version: ''
  max_epochs: 150
  callbacks:
    - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: val_mse
      save_top_k: 3
      filename: '{val_mse:.5f}-{epoch:03d}'

datamodule:
  _target_: src.data.BaseDataModule
  input_da:
    _target_: src.utils.load_full_natl_data
    path_obs: ${paths.obs}
    path_gt: ${paths.gt}
  domains:
    train:
      time: {_target_: builtins.slice, _args_: ['2012-10-01', '2013-09-29']}
    val:
      time: {_target_: builtins.slice, _args_: ['2012-12-15', '2013-02-24']}
    test:
      time: {_target_: builtins.slice,  _args_: ['2012-10-01', '2012-12-20']}
  xrds_kw:
    patch_dims: { time: 15, lat: 240, lon: 240}
    strides: { time: 1, lat: 200, lon: 200}
  dl_kw: {batch_size: 2, num_workers: 1}
  aug_kw:
    aug_factor: 2
    aug_only: true

model:
  _target_: src.models.Lit4dVarNet
  persist_rw: false
  opt_fn:
    _target_: src.utils.cosanneal_lr_adam
    _partial_: true
    lr: 1e-3
    T_max: ${trainer.max_epochs}
  rec_weight:
      _target_: src.utils.get_triang_time_wei
      patch_dims: ${datamodule.xrds_kw.patch_dims}
      crop: {time: 0, lat: 20, lon: 20}
      offset: 1
  solver:
    _target_: src.models.GradSolver
    n_step: 10
    lr_grad: 1e3
    # lr_grad: 0.2
    prior_cost:
      _target_: src.models.BilinAEPriorCost
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 32
      bilin_quad: false
      # bilin_quad: true
      downsamp: 2
    obs_cost:
      _target_: src.models.BaseObsCost
    grad_mod:
      _target_: src.models.ConvLstmGradModel
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 48
  test_metrics: ${metrics.test_metrics}
  pre_metric_fn:
    _target_: xarray.Dataset.sel
    _partial_: true
    time: {_target_: builtins.slice, _args_: ["2012-10-22", "2012-12-02"]}
    lat:
      _target_: contrib.lazyloading.crop_one_degree_border
      path: ${paths.obs}
      dim: lat
    lon:
      _target_: contrib.lazyloading.crop_one_degree_border
      path: ${paths.obs}
      dim: lon

metrics:
  nrmse_scores: {_target_: src.utils.rmse_based_scores_from_ds, _partial_: true}
  psd_scores: {_target_: src.utils.psd_based_scores_from_ds, _partial_: true}
  get0: {_target_: operator.itemgetter, _args_: [0]}
  get1: {_target_: operator.itemgetter, _args_: [1]}
  test_metrics:
    'mu': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get0}']}
    'sig': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get1}']}
    'lx': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get0}']}
    'lt': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get1}']}

entrypoints:
  - _target_: pytorch_lightning.seed_everything
    seed: 333
  - _target_: src.train.base_training
    trainer: ${trainer}
    lit_mod: ${model}
    dm: ${datamodule}

defaults:
  - _self_
